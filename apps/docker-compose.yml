services:
  service-client-getaway:
    build: ./client-getaway
    env_file:
      - ./client-getaway/.env
    ports:
      - "3000:3000"
    networks:
      - service-network
    environment:
      DATABASE_URL: postgresql://postgres:1234@postgres:5432/task_manager

  auth-service:
    env_file:
      - ./auth-ms/.env
    build: ./auth-ms
    networks:
      - service-network
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:1234@postgres:5432/task_manager
  task-service:
    env_file:
      - ./task-ms/.env
    build: ./task-ms
    networks:
      - service-network
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:1234@postgres:5432/task_manager
  task-history-service:
    env_file:
      - ./task-history-ms/.env
    build: ./task-history-ms
    networks:
      - service-network
    depends_on:
      - mongo
    environment:
      DATABASE_URL: mongodb://mongo:27017/task_manager

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: task_manager
    ports:
      - "5432:5432"
    networks:
      - service-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./script/01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./script/02-registers.sql:/docker-entrypoint-initdb.d/02-registers.sql

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    ports:
      - '27017:27017'




networks:
  service-network:

volumes:
  pgdata:
